/**
 * commonjs输出的是一个值的拷贝，es6输出的是值的引用
 * commonjs模块是运行时加载，es6模块是编译时输出接口
 * commonjs加载的对象在脚本运行完才会生成，es6对外接口是静态定义，在代码静态解析阶段就会生成
 * es6中顶层this=undefind commanjs中顶层this=当前模块
 * commandjs循环加载前一个模块会中断直到后一个模块加载完毕才继续执行
 * es6循环加载后一个模块不会再去执行前一个模块，可能引起错误，解决方案利用函数声明变量提升来解决
 */